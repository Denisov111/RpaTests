//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IRpaService", CallbackContract=typeof(IRpaServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
public interface IRpaService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/SendMessage", ReplyAction="http://tempuri.org/IRpaService/SendMessageResponse")]
    string SendMessage(string message);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/SendMessage", ReplyAction="http://tempuri.org/IRpaService/SendMessageResponse")]
    System.Threading.Tasks.Task<string> SendMessageAsync(string message);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/ReciveMessage", ReplyAction="http://tempuri.org/IRpaService/ReciveMessageResponse")]
    string[] ReciveMessage();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/ReciveMessage", ReplyAction="http://tempuri.org/IRpaService/ReciveMessageResponse")]
    System.Threading.Tasks.Task<string[]> ReciveMessageAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/ClearQueue", ReplyAction="http://tempuri.org/IRpaService/ClearQueueResponse")]
    void ClearQueue();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/ClearQueue", ReplyAction="http://tempuri.org/IRpaService/ClearQueueResponse")]
    System.Threading.Tasks.Task ClearQueueAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/GetActiveTabFilePath", ReplyAction="http://tempuri.org/IRpaService/GetActiveTabFilePathResponse")]
    string GetActiveTabFilePath();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/GetActiveTabFilePath", ReplyAction="http://tempuri.org/IRpaService/GetActiveTabFilePathResponse")]
    System.Threading.Tasks.Task<string> GetActiveTabFilePathAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/InitExtensionChannel", ReplyAction="http://tempuri.org/IRpaService/InitExtensionChannelResponse")]
    void InitExtensionChannel();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/InitExtensionChannel", ReplyAction="http://tempuri.org/IRpaService/InitExtensionChannelResponse")]
    System.Threading.Tasks.Task InitExtensionChannelAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IRpaServiceCallback
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRpaService/GetPath", ReplyAction="http://tempuri.org/IRpaService/GetPathResponse")]
    string GetPath();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IRpaServiceChannel : IRpaService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RpaServiceClient : System.ServiceModel.DuplexClientBase<IRpaService>, IRpaService
{
    
    public RpaServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
            base(callbackInstance)
    {
    }
    
    public RpaServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
            base(callbackInstance, endpointConfigurationName)
    {
    }
    
    public RpaServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public RpaServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public RpaServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, binding, remoteAddress)
    {
    }
    
    public string SendMessage(string message)
    {
        return base.Channel.SendMessage(message);
    }
    
    public System.Threading.Tasks.Task<string> SendMessageAsync(string message)
    {
        return base.Channel.SendMessageAsync(message);
    }
    
    public string[] ReciveMessage()
    {
        return base.Channel.ReciveMessage();
    }
    
    public System.Threading.Tasks.Task<string[]> ReciveMessageAsync()
    {
        return base.Channel.ReciveMessageAsync();
    }
    
    public void ClearQueue()
    {
        base.Channel.ClearQueue();
    }
    
    public System.Threading.Tasks.Task ClearQueueAsync()
    {
        return base.Channel.ClearQueueAsync();
    }
    
    public string GetActiveTabFilePath()
    {
        return base.Channel.GetActiveTabFilePath();
    }
    
    public System.Threading.Tasks.Task<string> GetActiveTabFilePathAsync()
    {
        return base.Channel.GetActiveTabFilePathAsync();
    }
    
    public void InitExtensionChannel()
    {
        base.Channel.InitExtensionChannel();
    }
    
    public System.Threading.Tasks.Task InitExtensionChannelAsync()
    {
        return base.Channel.InitExtensionChannelAsync();
    }
}
